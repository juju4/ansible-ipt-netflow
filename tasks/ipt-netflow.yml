---

- name: Git clone ipt-netflow
  ansible.builtin.git:
    repo=https://github.com/aabc/ipt-netflow.git
    dest={{ toolsetdir }}/ipt-netflow
    version={{ iptnetflow_version }}

- name: Debian | update cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: "{{ iptnetflow_apt_cache_valid_time | default(3600) }}"
  when: ansible_os_family == 'Debian'

- name: Ipt-netflow dependencies
  ansible.builtin.package:
    name: "{{ iptnetflow_pkg }}"
    state: present
  register: pkg_result
  until: pkg_result is success

# - name: set linux src vars
#   ansible.builtin.set_fact:
#     srcdir: "linux-source-{{ ansible_kernel | regex_replace('-[0-9]*-generic$', '') }}"
#     workdir: "/root/"

- name: Debian
  block:
    ## no module-assistant: fails...
    # - name: uncompress kernel
    #   unarchive: "src=/usr/src/{{ srcdir }}.tar.bz2 dest={{ workdir }} creates={{ workdir }}/{{ srcdir }}/Makefile"
    # - name: copy current config
    #   copy: src=/boot/config-{{ ansible_kernel }} dest={{ workdir }}/{{ srcdir }}/.config remote_src=yes
    # - name: make oldconfig
    #   command: "make oldconfig chdir={{ workdir }}/{{ srcdir }}"
    # - name: prepare kernel
    #   command: "make prepare modules_prepare chdir={{ workdir }}/{{ srcdir }}"
    ## with module-assistant
    - name: Check if module-assistant has run
      ansible.builtin.stat: path=/root/.m-a-prepare
      register: madone
    - name: Module-assistant prepare
      ansible.builtin.command: "m-a prepare -t create=/usr/src/linux/.config"
      when: not madone.stat.exists
    - name: Add marker status
      ansible.builtin.file:
        dest: /root/.m-a-prepare
        mode: '0600'
        state: touch
      when: not madone.stat.exists
  when: ansible_os_family == 'Debian'

- name: Compile ipt-netflow
  ansible.builtin.command: "{{ item.s }} chdir={{ toolsetdir }}/ipt-netflow creates={{ item.c }}"
  with_items:
    # - { s: "./configure --kdir={{ workdir }}/{{ srcdir }}", c: "{{ toolsetdir }}/ipt-netflow/build" }
    - { s: "./configure {{ iptnetflow_configure_args }}", c: "{{ toolsetdir }}/ipt-netflow/Makefile" }
    - { s: 'make all install', c: '/lib/modules/{{ ansible_kernel }}/extra/ipt_NETFLOW.ko' }

- name: Configure ipt-netflow
  ansible.builtin.lineinfile:
    dest: /etc/modprobe.d/ipt_netflow.conf
    regexp: 'options ipt_NETFLOW .*'
    line: "options ipt_NETFLOW {{ iptnetflow_flow_collector }}"
    # line: "options ipt_NETFLOW {{ iptnetflow_flow_collector }} protocol=9 natevents=1"
    mode: '0644'
    backup: yes
    create: yes

- name: Check if modules loaded
  ansible.builtin.command: lsmod
  changed_when: false
  register: lsmod
- name: Kernel module
  block:
    - name: Debug | lsmod output
      ansible.builtin.debug: var=lsmod
    ## depmod only rewrite those files like '/lib/modules/{{ ansible_kernel }}/modules.dep', not creating them
    - name: Run depmod  # noqa no-changed-when
      ansible.builtin.command: "depmod chdir={{ toolsetdir }}/ipt-netflow"
    - name: Load ipt_NETFLOW.ko  # noqa no-changed-when
      # command: "modprobe ipt_NETFLOW.ko {{ iptnetflow_flow_collector }}"
      ansible.builtin.command: "insmod /lib/modules/{{ ansible_kernel }}/extra/ipt_NETFLOW.ko {{ iptnetflow_flow_collector }}"
  when: >
    lsmod is defined and lsmod.stdout is defined and lsmod.stdout.find("ipt_NETFLOW.ko") == -1 and
    iptnetflow_load_module is defined and iptnetflow_load_module and
    not (ansible_env['TRAVIS'] is defined and ansible_env['TRAVIS'] == 'true')
## FIXME! ubuntu 12.04
# $ sudo insmod /lib/modules/3.2.0-106-generic/extra/ipt_NETFLOW.ko
# insmod: error inserting '/lib/modules/3.2.0-106-generic/extra/ipt_NETFLOW.ko': -1 Unknown symbol in module

- name: Load ipt-netflow at boot
  ansible.builtin.lineinfile:
    dest: /etc/sysconfig/iptables-config
    line: 'IPTABLES_MODULES=\"ipt_NETFLOW\"'
    backup: yes
  when: ansible_os_family == 'RedHat'
  notify:
    - Restart iptables

## selinux?
# restorecon -v /lib/xtables/libipt_NETFLOW.so
